name: Deploy Frontend

on:
  push:
    branches: [ main ]
    paths:
      - 'echome-fe/**'
  workflow_dispatch:
    inputs:
      fe_port:
        description: "Frontend port (default 3000)"
        required: false
        default: "3000"

concurrency:
  group: deploy-fe
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      FE_PORT: ${{ inputs.fe_port || '3000' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install deps
        working-directory: echome-fe
        run: pnpm install --frozen-lockfile

      - name: Build FE
        working-directory: echome-fe
        run: pnpm build

      - name: Package release
        run: |
          mkdir -p dist
          tar -czf dist/fe_release_${{ github.sha }}.tar.gz \
            -C echome-fe .next public package.json pnpm-lock.yaml next.config.ts
          ls -lh dist

      - name: Copy artifacts (FE tar + deploy script)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          source: "dist/fe_release_${{ github.sha }}.tar.gz,deploy/deploy_fe.sh"
          target: "/tmp"

      - name: Remote deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script_stop: true
          script: |
            chmod +x /tmp/deploy_fe.sh
            FE_DEPLOY_PATH="${FE_DEPLOY_PATH:-/opt/echome-fe}" bash /tmp/deploy_fe.sh /tmp/fe_release_${{ github.sha }}.tar.gz ${{ github.sha }}
