// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/justin/echome-be/client"
	"github.com/justin/echome-be/config"
	"github.com/justin/echome-be/internal/app"
	"github.com/justin/echome-be/internal/infrastructure"
	"github.com/justin/echome-be/internal/interfaces"
	"github.com/justin/echome-be/internal/service/character"
	"github.com/justin/echome-be/internal/service/conversation"
	"github.com/justin/echome-be/internal/service/webrtc"
)

import (
	_ "github.com/justin/echome-be/docs"
)

// Injectors from wire.go:

// InitializeApplication creates a new Application with all dependencies
// 参数: configPath - 配置文件路径
func InitializeApplication(configPath2 string) (*app.Application, error) {
	configConfig := config.Load(configPath2)
	memoryCharacterRepository := infrastructure.NewMemoryCharacterRepository()
	characterService := character.NewCharacterService(memoryCharacterRepository)
	webRTCService := webrtc.NewWebRTCService()
	aliClient, err := client.NewAIServiceFromConfig(configConfig)
	if err != nil {
		return nil, err
	}
	conversationService := conversation.NewConversationService(aliClient, characterService)
	handlers := interfaces.NewHandlers(characterService, webRTCService, aliClient, conversationService)
	application := app.NewApplication(configConfig, handlers)
	return application, nil
}
