// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/justin/echome-be/config"
	"github.com/justin/echome-be/internal/app"
	character2 "github.com/justin/echome-be/internal/domain/character"
	"github.com/justin/echome-be/internal/domain/conversation"
	"github.com/justin/echome-be/internal/handler"
	"github.com/justin/echome-be/internal/infra/aliyun"
	"github.com/justin/echome-be/internal/infra/character"
	"github.com/justin/echome-be/internal/infra/db"
)

import (
	_ "github.com/justin/echome-be/docs"
)

// Injectors from wire.go:

// InitializeApplication creates a new Application with all dependencies
// 参数: configPath - 配置文件路径
func InitializeApplication(configPath2 string) (*app.Application, error) {
	configConfig, err := config.Load(configPath2)
	if err != nil {
		return nil, err
	}
	databaseConfig := config.GetDatabaseConfig(configConfig)
	dbDB, err := db.NewDB(databaseConfig)
	if err != nil {
		return nil, err
	}
	query := db.NewQuery(dbDB)
	characterRepository := character.NewCharacterRepository(query)
	aliClient := aliyun.ProvideAliClient(configConfig)
	characterService := character2.NewCharacterService(characterRepository, aliClient)
	tavilyConfig := config.GetTavilyConfig(configConfig)
	conversationService := conversation.NewConversationService(aliClient, characterService, tavilyConfig)
	handlers := handler.NewHandlers(characterService, aliClient, conversationService)
	application := app.NewApplication(configConfig, handlers)
	return application, nil
}
